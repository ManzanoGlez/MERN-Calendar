{"version":3,"sources":["redux/types.js","redux/reducers/uiReducer.js","redux/reducers/calendarReducer.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/store.js","helpers/fetch.js","helpers/handleErrors.js","helpers/prepareEvent.js","redux/actions/events.js","redux/actions/auth.js","screens/auth/LoginScreen.js","hooks/useForm.js","helpers/calendar-messages-es.js","screens/ui/NavBar.js","screens/calendar/CalendarEvent.js","redux/actions/ui.js","screens/calendar/CalendarModal.js","screens/ui/AddNewFab.js","screens/ui/DeleteEventFab.js","screens/calendar/CalendarScreen.js","router/PrivateRoutes.js","router/PublicRoutes.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","user","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","Call","endpoint","a","method","data","signed","url","headers","Headers","Accept","token","localStorage","getItem","append","fetch","body","JSON","stringify","resp","json","result","status_code","status","request_ok","ok","errorHandler","msgErrors","Object","entries","errors","forEach","value","push","msg","Swal","fire","title","html","join","icon","console","warn","prepareEvent","start","moment","toDate","end","startClearActiveEvent","eventUpdate","addNewEvent","eventLoaded","eventDelete","startChecking","dispatch","setItem","access_token","Date","getTime","login","checkingFinish","register","logout","LoginScreen","useDispatch","useState","values","setValues","handleInputChange","target","name","reset","setInputValue","inputName","useForm","l_email","l_password","r_name","r_email","r_password","r_password_confirm","className","onSubmit","e","email","password","preventDefault","toString","toLowerCase","placeholder","onChange","password_confirm","text","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","NavBar","useSelector","onClick","clear","CalendarEvent","startUIOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","defaultStartDate","minutes","seconds","add","defaultEndDate","clone","initEvent","notes","Modal","setAppElement","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","contentLabel","overlayClassName","closeTimeoutMS","isSameOrAfter","trim","length","getState","_id","startAddNewEvent","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","uid","lastView","setLastView","startAccessor","endAccessor","selectable","eventPropGetter","isSelected","e_uid","backgroundColor","borderRadius","opacity","color","display","onDoubleClickEvent","onSelectSlot","onSelectEvent","startSetActiveEvent","onView","view","components","PrivateRoutes","isAuthenticated","Component","component","rest","props","to","PublicRoutes","AppRouter","intervalChecking","setInterval","clearInterval","exact","path","CalendarApp","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.e97b4c34.chunk.js","sourcesContent":["export const types = {\n    //ui\n    uiOpenModal: \"[iu]:openModal\",\n    uiCloseModal: \"[iu]:closeModal\",\n\n    //calendario\n    eventAddNew: \"[event]:addNewEvent\",\n    eventSaveNew: \"[event]:eventSaveNew\",\n    eventSetActive: \"[event]:setActiveEvent\",\n    eventClearActiveEvent: \"[event]:eventClearActiveEvent\",\n    eventUpdate: \"[event]:eventUpdate\",\n    eventDelete: \"[event]:eventDelete\",\n    eventLoaded: \"[event]:eventLoaded\",\n    eventEventLogout: \"[event]:eventEventLogout\",\n\n    //auth\n    authCheckingFinish: \"[auth]:authCheckingFinish\",\n    authStartLogin: \"[auth]:authStartLogin\",\n    authLogin: \"[auth]:authLogin\",\n    authRegister: \"[auth]:authRegister\",\n    authRenew: \"[auth]:authRenew\",\n    authLogout: \"[auth]:authLogout\",\n};\n","import { types } from \"../types\";\n\n\nconst initialState = { modalOpen:false};\n\nexport const uiReducer = (state = initialState,action) => {\n\nswitch (action.type) {\n    case types.uiOpenModal:\n        return {\n            ...state,\n            modalOpen: true,\n        };\n    case types.uiCloseModal:\n        return {\n            ...state,\n            modalOpen: false,\n        };\n    default:\n        return state;\n}\n\n\n}","import { types } from \"../types\";\n\nconst initialState = {\n    events: [],\n    activeEvent: null,\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [action.payload, ...state.events],\n            };\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload,\n            };\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null,\n            };\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map((event) =>\n                    event.id === action.payload.id ? action.payload : event\n                ),\n            };\n        case types.eventDelete:\n            return {\n                ...state,\n                events: state.events.filter(\n                    (event) => event.id !== state.activeEvent.id\n                ),\n                activeEvent: null,\n            };\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: action.payload,\n            };\n        case types.eventEventLogout:\n            return initialState;\n\n        default:\n            return state;\n    }\n};\n","import { types } from \"../types\";\n\nconst initialState = {\n    checking: true,\n};\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n        case types.authRegister:\n            return {\n                ...state,\n                checking: false,\n                user: action.payload,\n            };\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false,\n            };\n        case types.authLogout:\n            return {\n                checking: false,\n            };\n\n        default:\n            return state;\n    }\n};\n","import { combineReducers } from \"redux\";\nimport { uiReducer } from \"./uiReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { authReducer } from \"./authReducer\";\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer,\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"./reducers/rootReducer\";\n\nconst composeEnhancers =\n    (typeof window !== \"undefined\" &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n    compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n);\n","const baseUrl = process.env.REACT_APP_API;\n\nexport const Call = async (\n    endpoint,\n    method = \"GET\",\n    data = null,\n    signed = true\n) => {\n    const url = `${baseUrl}/${endpoint}`;\n\n    const headers = new Headers({\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n    });\n\n    if (signed) {\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            headers.append(\"x-api-key\", token);\n        }\n\n      //  throw new Error(\"No item 'token' in localStorage\");\n    }\n\n    const resp = await fetch(url, {\n        method,\n        headers,\n        body: data ? JSON.stringify(data) : data,\n    });\n\n    const result = await resp.json();\n\n    result.status_code = resp.status;\n    result.request_ok = resp.ok;\n\n    return result;\n};\n","import Swal from \"sweetalert2\";\n\nexport const errorHandler = (data) => {\n    switch (data.status_code) {\n        case 422: // Error validator\n            let msgErrors = [];\n\n            Object.entries(data.errors).forEach(([key, value]) => {\n                msgErrors.push(` - ${value.msg}`);\n            });\n\n            Swal.fire({\n                title: \"Error\",\n                html: msgErrors.join(\"<br/>\"),\n                icon: \"warning\",\n            });\n              return msgErrors;\n        case 400: //Bad request\n        case 401: //Not authenticated \n        case 404: //Not fount\n        case 500: //Server error\n            Swal.fire(\"Error\", data.msg, \"error\");\n            break;\n        default:\n            console.warn(data);\n            break;\n    }\n\n \n};\n","import moment from \"moment\";\n\nexport const prepareEvent = (events = []) => {\n    return events.map((event) => ({\n        ...event,\n        start: moment(event.start).toDate(),\n        end: moment(event.end).toDate(),\n    }));\n};\n","import { Call } from \"../../helpers/fetch\";\nimport { errorHandler } from \"../../helpers/handleErrors\";\nimport { prepareEvent } from \"../../helpers/prepareEvent\";\nimport { types } from \"../types\";\n\nexport const startAddNewEvent = (event) => {\n    return async (dispatch, getState) => {\n        const { user } = getState().auth;\n\n        const data = await Call(\"event\", \"POST\", event);\n\n        if (data.ok) {\n            const event = {\n                ...data.event,\n                user: {\n                    ...user,\n                    _id: user.id\n                },\n            };\n\n            dispatch(addNewEvent(event));\n        } else {\n            errorHandler(data);\n        }\n    };\n};\n\nexport const startEventLoading = () => {\n    return async (dispatch) => {\n        const data = await Call(\"event\");\n\n        if (data.ok) {\n            const events = prepareEvent(data.events);\n            \n            dispatch(eventLoaded(events));\n        }\n    };\n};\n\nexport const startSetActiveEvent = (event) => ({\n    type: types.eventSetActive,\n    payload: event,\n});\n\nexport const startClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent,\n});\n\nexport const startEventLogout = () => ({\n    type: types.eventEventLogout,\n});\n\n\nexport const startEventUpdate = (event) => {\n    return async (dispatch) => {\n        const data = await Call(`event/${event.id}`, \"PUT\", event);\n\n        if (data.ok) {\n            dispatch(eventUpdate(event));\n        } else {\n            errorHandler(data);\n        }\n    };\n};\n\nexport const startEventDeleted = (event) => {\n    return async (dispatch, getState) => {\n\n        const { activeEvent } = getState().calendar;\n\n        const data = await Call(`event/${activeEvent.id}`, \"DELETE\");\n\n        if (data.ok) {\n            dispatch(eventDelete(event));\n        } else {\n            errorHandler(data);\n        }\n    };\n};\n\n/// Types\nconst eventUpdate = (event) => ({\n    type: types.eventUpdate,\n    payload: event,\n});\n\nconst addNewEvent = (event) => ({\n    type: types.eventAddNew,\n    payload: event,\n});\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events,\n});\n\nconst eventDelete = (event) => ({\n    type: types.eventDelete,\n    payload: event,\n});\n","import Swal from \"sweetalert2\";\nimport { Call } from \"../../helpers/fetch\";\nimport { errorHandler } from \"../../helpers/handleErrors\";\nimport { types } from \"../types\";\nimport { startEventLogout } from \"./events\";\n\n\nexport const startLogin = (email, password) => {\n    return async (dispatch) => {\n        email = email.toString().toLowerCase();\n\n        const data = await Call(\n            \"/auth/login\",\n            \"POST\",\n            { email, password },\n            false\n        );\n\n        if (data.ok) {\n            localStorage.setItem(\"token\", data.access_token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(login(data.user));\n        } else {\n            errorHandler(data);\n        }\n    };\n};\n\nexport const startRegister = (name, email, password, password_confirm) => {\n    return async (dispatch) => {\n        if (password !== password_confirm) {\n            return Swal.fire({\n                title: \"Error\",\n                text: \"Confirmar contraseña debe no coincide.\",\n                icon: \"warning\",\n            });\n        }\n\n        email = email.toString().toLowerCase();\n\n        const data = await Call(\n            \"/auth/register\",\n            \"POST\",\n            { name, email, password },\n            false\n        );\n\n        if (data.ok) {\n            localStorage.setItem(\"token\", data.access_token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n            dispatch(register(data.user));\n        } else {\n            errorHandler(data);\n        }\n    };\n};\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n        const data = await Call(\"/auth/renew\");\n\n        if (data.ok) {\n            localStorage.setItem(\"token\", data.access_token);\n            localStorage.setItem(\"token-init-date\", new Date().getTime());\n\n            dispatch(login(data.user));\n        } else {\n            dispatch(checkingFinish());\n        }\n    };\n};\n\nexport const startLogout = () => {\n    return async (dispatch) => {\n        localStorage.clear();\n        dispatch(startEventLogout());\n        dispatch(logout());\n    };\n};\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user,\n});\nconst register = (user) => ({\n    type: types.authRegister,\n    payload: user,\n});\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish,\n});\nconst logout = () => ({\n    type: types.authLogout,\n});\n","import React from \"react\";\nimport \"./login.css\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { useDispatch } from \"react-redux\";\nimport { startLogin, startRegister } from \"../../redux/actions/auth\";\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const initialForm = {\n        //login\n        l_email: \"manzano@gmail.com\",\n        l_password: \"123456\",\n        //register\n        r_name: \"Jorge Manzano\",\n        r_email: \"manzano5@gmail.com\",\n        r_password: \"123456\",\n        r_password_confirm: \"123456\",\n    };\n\n    const [values, handleInputChange] = useForm(initialForm);\n\n    const {\n        //login\n        l_email,\n        l_password,\n        //register\n        r_name,\n        r_email,\n        r_password,\n        r_password_confirm,\n    } = values;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLogin(l_email, l_password));\n     };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        dispatch(startRegister(r_name, r_email, r_password, r_password_confirm));\n\n    };\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"l_email\"\n                                value={l_email}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"l_password\"\n                                value={l_password}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"r_name\"\n                                value={r_name}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"r_email\"\n                                value={r_email}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"r_password\"\n                                value={r_password}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"r_password_confirm\"\n                                value={r_password_confirm}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Crear cuenta\"\n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value,\n        });\n    };\n\n        const reset = () => setValues(initialState);\n\n\n    const setInputValue = (inputName: String, value: String) => {\n        setValues({\n            ...values,\n            [inputName]: value,\n        });\n    };\n\n\n    return [values, handleInputChange, reset, setInputValue];\n};\n","export const messages = {\n  allDay: \"Todo el día\",\n  previous: \"<\",\n  next: \">\",\n  today: \"Hoy\",\n  month: \"Mes\",\n  week: \"Semana\",\n  day: \"Día\",\n  agenda: \"Agenda\",\n  date: \"Fecha\",\n  time: \"Hora\",\n  event: \"Evento\",\n  noEventsInRange: \"No hay eventos en este rango\",\n  showMore: (total) => `+ Ver más (${total})`,\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { startLogout } from \"../../redux/actions/auth\";\n\nexport const NavBar = () => {\n    const dispatch = useDispatch();\n\n    const { user } = useSelector((state) => state.auth);\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    };\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">{user.name}</span>\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir </span>\n            </button>\n        </div>\n    );\n};\n","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n\n// console.log(event);\n\nconst {title,user} = event\n\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span> - {user.name}</span>\n        </div>\n    )\n}\n","import { types } from \"../types\";\n\nexport const startUIOpenModal = () => ({  type: types.uiOpenModal });\nexport const startUICloseModal = () => ({ type: types.uiCloseModal });\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport DateTimePicker from \"react-datetime-picker\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\n\nimport { startUICloseModal } from \"../../redux/actions/ui\";\nimport {\n    startAddNewEvent,\n    startClearActiveEvent,\n    startEventUpdate,\n} from \"../../redux/actions/events\";\n\nconst customStyles = {\n    content: {\n        top: \"50%\",\n        left: \"50%\",\n        right: \"auto\",\n        bottom: \"auto\",\n        marginRight: \"-50%\",\n        transform: \"translate(-50%, -50%)\",\n    },\n};\n\nconst defaultStartDate = moment().minutes(0).seconds(0).add(1, \"hours\");\nconst defaultEndDate = defaultStartDate.clone().add(1, \"hours\");\n\nconst initEvent = {\n    title: \"\",\n    notes: \"\",\n    start: defaultEndDate.toDate(),\n    end: defaultEndDate.toDate(),\n};\n\nModal.setAppElement(\"#root\");\n\nexport const CalendarModal = () => {\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector((state) => state.ui);\n    const { activeEvent } = useSelector((state) => state.calendar);\n\n    const [dateStart, setDateStart] = useState(defaultStartDate.toDate());\n    const [dateEnd, setDateEnd] = useState(defaultEndDate.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n    const [formValues, setFormValues] = useState(initEvent);\n\n    useEffect(() => {\n        setFormValues(activeEvent ? activeEvent : initEvent);\n    }, [activeEvent, setFormValues]);\n\n    const { notes, title, start, end } = formValues;\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value,\n        });\n    };\n\n    const handleStartDateChange = (date) => {\n        setDateStart(date);\n        setFormValues({\n            ...formValues,\n            start: date,\n        });\n    };\n\n    const handleEndDateChange = (date) => {\n        setDateEnd(date);\n        setFormValues({\n            ...formValues,\n            end: date,\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (moment(start).isSameOrAfter(moment(end))) {\n            return Swal.fire(\n                \"Error\",\n                \"Fecha de fin debe ser al menos 1 hora mayor que la fecha de inicio.\",\n                \"error\"\n            );\n        }\n\n        if (title.trim().length < 2) {\n            return setTitleValid(false);\n        }\n\n        if (activeEvent) {\n            dispatch(startEventUpdate(formValues));\n        } else {\n            dispatch(startAddNewEvent(formValues));\n        }\n\n        setTitleValid(true);\n        closeModal();\n    };\n\n    const closeModal = () => {\n        dispatch(startUICloseModal());\n        dispatch(startClearActiveEvent());\n        setFormValues(initEvent);\n    };\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            onRequestClose={closeModal}\n            style={customStyles}\n            contentLabel=\"Example Modal\"\n            className=\"modal\"\n            overlayClassName=\"modal-background\"\n            closeTimeoutMS={200}\n        >\n            <h1> {activeEvent ? 'Modificar':'Nuevo'} evento </h1>\n            <hr />\n            <form className=\"container\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input\n                        type=\"text\"\n                        className={`form-control ${\n                            !titleValid && \"is-invalid\"\n                        }`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        value={title}\n                        onChange={handleInputChange}\n                        autoComplete=\"off\"\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Una descripción corta\n                    </small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">\n                        Información adicional\n                    </small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n            </form>\n        </Modal>\n    );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { startUIOpenModal } from \"../../redux/actions/ui\";\n\nexport const AddNewFab = () => {\n    \n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(startUIOpenModal());\n    };\n\n    return (\n        <button className=\"btn btn-primary fab\" onClick={handleClick}>\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { startEventDeleted } from \"../../redux/actions/events\";\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n\n    const { activeEvent } = useSelector((state) => state.calendar);\n\n    const handleClick = () => {\n        dispatch(startEventDeleted());\n    };\n\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={handleClick}>\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento - {activeEvent.title} </span>\n        </button>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport { messages } from \"../../helpers/calendar-messages-es\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport { NavBar } from \"../ui/NavBar\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { CalendarModal } from \"./CalendarModal\";\nimport { startUIOpenModal } from \"../../redux/actions/ui\";\nimport {\n    startSetActiveEvent,\n    startClearActiveEvent,\n    startEventLoading,\n} from \"../../redux/actions/events\";\nimport { AddNewFab } from \"../ui/AddNewFab\";\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\n\nmoment.locale(\"es\");\n\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\nexport const CalendarScreen = () => {\n    const dispatch = useDispatch();\n    const {events, activeEvent} = useSelector((state) => state.calendar);\n      const { user:{id:uid} } = useSelector((state) => state.auth);\n\n    useEffect(() => {\n        dispatch(startEventLoading());\n    }, [dispatch]);\n\n    const [lastView, setLastView] = useState(\n        localStorage.getItem(\"lastView\") || \"month\"\n    );\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n\n        const e_uid = event.user._id;\n\n\n        const style = {\n            backgroundColor: uid === e_uid ? \"#367cf7\" : \"#bb0010\",\n            borderRadius: \"0px\",\n            opacity: 0.8,\n            color: \"white\",\n            display: \"block\",\n        };\n\n        return {style}\n    };\n\n    const onDoubleClick = (event) => {\n        dispatch(startUIOpenModal());\n    };\n\n    const onSelectEvent = (event) => {\n        dispatch(startSetActiveEvent(event));\n    };\n\n    const onViewChange = (view) => {\n        setLastView(view);\n        localStorage.setItem(\"lastView\", view);\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch(startClearActiveEvent());\n    };\n\n    return (\n        <div className=\"calendar__screen\">\n            <NavBar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                selectable={true}\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectSlot={onSelectSlot}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                view={lastView}\n                components={{\n                    event: CalendarEvent,\n                }}\n            />\n            <AddNewFab />\n\n            {activeEvent && <DeleteEventFab />}\n\n            <CalendarModal />\n        </div>\n    );\n};\n","import React from 'react'\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nexport const PrivateRoutes = ({ isAuthenticated, component: Component, ...rest }) => {\n\n  return (\n    <Route\n      {...rest}\n        component={(props) =>\n          isAuthenticated ? <Component {...props} /> : <Redirect to=\"/auth/login\" />\n        }\n    />\n  );\n};\n\n\nPrivateRoutes.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};\n","import React from 'react'\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport const PublicRoutes = ({ isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Redirect to=\"/\" /> : <Component {...props} />\n      }\n    />\n  );\n};\n\n\nPublicRoutes.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n};","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { startChecking } from \"../redux/actions/auth\";\nimport { LoginScreen } from \"../screens/auth/LoginScreen\";\nimport { CalendarScreen } from \"../screens/calendar/CalendarScreen\";\nimport { PrivateRoutes } from \"./PrivateRoutes\";\nimport { PublicRoutes } from \"./PublicRoutes\";\n \nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n\n    const { checking, user } = useSelector((state) => state.auth);\n\n    useEffect(() => {\n        let intervalChecking = null;\n        \n            if (checking) {\n                dispatch(startChecking());\n\n                intervalChecking = setInterval(() => {\n                    dispatch(startChecking());\n                }, 1000 * 60 * 60); // 1hr every hour\n            } \n\n        return () => {\n            if (intervalChecking) {\n                clearInterval(intervalChecking);\n            }\n        };\n    });\n\n    if (checking) {\n        return <h5>Cargando...</h5>;\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoutes\n                        exact\n                        path=\"/auth/login\"\n                        component={LoginScreen}\n                        isAuthenticated={!!user}\n                    />\n\n                    <PrivateRoutes\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                        isAuthenticated={!!user}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store'\nimport { AppRouter } from './router/AppRouter'\n\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    );\n}\n","import React from 'react'\nimport ReactDom from 'react-dom'\nimport { CalendarApp } from './CalendarApp';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles/styles.scss\";\n\n\nReactDom.render(<CalendarApp />, document.getElementById('root'));"],"sourceRoot":""}